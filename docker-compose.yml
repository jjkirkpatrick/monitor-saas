services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - proxy

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - NATS_URL=nats://nats:4222
      - AUTH0_DOMAIN=monitoring-dev.uk.auth0.com
      - AUTH0_AUDIENCE=http://localhost:8080
    depends_on:
      - postgres
      - nats
    networks:
      - proxy

  # Monitoring Engine Services
  scheduler:
    build:
      context: .
      dockerfile: services/monitoring-engine/scheduler/Dockerfile
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - NATS_URL=nats://nats:4222
    depends_on:
      - postgres
      - nats
    networks:
      - proxy

  probe-manager:
    build:
      context: .
      dockerfile: services/monitoring-engine/probe-manager/Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
    depends_on:
      - nats
    networks:
      - proxy

  probe-worker:
    build:
      context: .
      dockerfile: services/monitoring-engine/probe-worker/Dockerfile
    environment:
      - NATS_URL=nats://nats:4222
    depends_on:
      - nats
    deploy:
      replicas: 3
    networks:
      - proxy

  # Data Processing Services
  ingestion-service:
    build:
      context: .
      dockerfile: services/data-processing/ingestion/Dockerfile
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - TIMESCALE_DSN=postgresql://monitoring:monitoring@timescaledb:5432/monitoring_metrics?sslmode=disable
      - NATS_URL=nats://nats:4222
    depends_on:
      - timescaledb
      - nats
    networks:
      - proxy

  analytics-service:
    build:
      context: .
      dockerfile: services/data-processing/analytics/Dockerfile
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - TIMESCALE_DSN=postgresql://monitoring:monitoring@timescaledb:5432/monitoring_metrics?sslmode=disable
      - NATS_URL=nats://nats:4222
    depends_on:
      - postgres
      - timescaledb
    networks:
      - proxy

  # Alert System Services
  alert-manager:
    build:
      context: .
      dockerfile: services/alert-system/manager/Dockerfile
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - nats
      - redis
    networks:
      - proxy

  notification-service:
    build:
      context: .
      dockerfile: services/alert-system/notification/Dockerfile
    environment:
      - POSTGRES_DSN=postgresql://monitoring:monitoring@postgres:5432/monitoring?sslmode=disable
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis:6379
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
    depends_on:
      - postgres
      - nats
      - redis
    networks:
      - proxy

  # Infrastructure Services
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=monitoring
      - POSTGRES_PASSWORD=monitoring
      - POSTGRES_DB=monitoring
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - proxy

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_USER=monitoring
      - POSTGRES_PASSWORD=monitoring
      - POSTGRES_DB=monitoring_metrics
    ports:
      - "5433:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - proxy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - proxy

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--jetstream"]
    networks:
      - proxy

  # Observability Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/observability/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - proxy

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./deploy/observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    networks:
      - proxy

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yml -config.expand-env=true
    volumes:
      - ./deploy/observability/loki/loki.yaml:/etc/loki/loki.yml
      - loki_data:/loki
    networks:
      - proxy

  tempo:
    image: grafana/tempo:latest
    ports:
      - "3200:3200"
      - "4317:4317"
    volumes:
      - ./deploy/observability/tempo:/etc/tempo
      - tempo_data:/tmp/tempo
    command: -config.file=/etc/tempo/tempo.yaml
    networks:
      - proxy

volumes:
  postgres_data:
  timescaledb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:

networks:
  proxy:
    name: monitoring-network
    external: true