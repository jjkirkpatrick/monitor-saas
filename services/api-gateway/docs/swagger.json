{
    "swagger": "2.0",
    "info": {
        "description": "API Gateway for the Monitor SaaS platform",
        "title": "Monitor SaaS API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://monitor-saas.com/support",
            "email": "support@monitor-saas.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/alerts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all alert configurations for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "List alert configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ListAlertConfigsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new alert configuration for a monitor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Create alert config",
                "parameters": [
                    {
                        "description": "Alert config details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateAlertConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetAlertConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/alerts/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details for a specific alert config by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Get alert config details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetAlertConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing alert configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Update alert config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Alert config update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateAlertConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetAlertConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an alert configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Delete alert config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns OK if the service is healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/monitors": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all monitors for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "List monitors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ListMonitorsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new monitor for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Create a new monitor",
                "parameters": [
                    {
                        "description": "Monitor to create",
                        "name": "monitor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateMonitorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetMonitorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/monitors/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details for a specific monitor by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Get monitor details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Monitor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetMonitorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates an existing monitor for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Update a monitor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Monitor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Monitor to update",
                        "name": "monitor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateMonitorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetMonitorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a monitor for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitors"
                ],
                "summary": "Delete a monitor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Monitor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get settings for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get user settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetSettingsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates all settings for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update all user settings",
                "parameters": [
                    {
                        "description": "Settings to update",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates a single setting for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update a single setting",
                "parameters": [
                    {
                        "description": "Setting to update",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/api-key": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generates a new API key for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Generate a new API key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GenerateAPIKeyResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/reset": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Resets all user settings to their default values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Reset user settings to defaults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserSettings"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/test-webhook": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Tests the webhook configuration by sending a test payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Test webhook configuration",
                "parameters": [
                    {
                        "description": "Webhook configuration to test",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.TestWebhookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TestWebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/toggle/{setting}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Toggles a boolean setting for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Toggle a boolean setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting name to toggle",
                        "name": "setting",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ToggleSettingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AlertCondition": {
            "type": "string",
            "enum": [
                "status_code",
                "latency",
                "availability",
                "ssl_expiry",
                "keyword",
                "pattern"
            ],
            "x-enum-varnames": [
                "AlertConditionStatusCode",
                "AlertConditionLatency",
                "AlertConditionAvailability",
                "AlertConditionSSLExpiry",
                "AlertConditionKeyword",
                "AlertConditionPattern"
            ]
        },
        "types.AlertConfig": {
            "type": "object",
            "properties": {
                "condition": {
                    "$ref": "#/definitions/types.AlertCondition"
                },
                "consecutive_count": {
                    "type": "integer"
                },
                "cooldown_minutes": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "monitor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/types.AlertSeverity"
                },
                "threshold": {
                    "$ref": "#/definitions/types.AlertThreshold"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.AlertSeverity": {
            "type": "string",
            "enum": [
                "info",
                "warning",
                "critical"
            ],
            "x-enum-varnames": [
                "AlertSeverityInfo",
                "AlertSeverityWarning",
                "AlertSeverityCritical"
            ]
        },
        "types.AlertThreshold": {
            "type": "object",
            "properties": {
                "days_in_advance": {
                    "description": "For SSL expiry alerts",
                    "type": "integer"
                },
                "exact_match": {
                    "type": "string"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "pattern": {
                    "type": "string"
                }
            }
        },
        "types.CreateAlertConfigRequest": {
            "type": "object",
            "required": [
                "condition",
                "consecutive_count",
                "cooldown_minutes",
                "monitor_id",
                "name",
                "severity",
                "threshold"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/types.AlertCondition"
                },
                "consecutive_count": {
                    "type": "integer",
                    "minimum": 1
                },
                "cooldown_minutes": {
                    "type": "integer",
                    "minimum": 1
                },
                "monitor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/types.AlertSeverity"
                },
                "threshold": {
                    "$ref": "#/definitions/types.AlertThreshold"
                }
            }
        },
        "types.CreateMonitorRequest": {
            "type": "object",
            "required": [
                "interval",
                "locations",
                "name",
                "target",
                "timeout",
                "type"
            ],
            "properties": {
                "dns_record_type": {
                    "type": "string"
                },
                "expected_response": {
                    "type": "string"
                },
                "expected_status_codes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "follow_redirects": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer",
                    "minimum": 30
                },
                "locations": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.MonitorStatus"
                },
                "target": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "minimum": 5
                },
                "type": {
                    "$ref": "#/definitions/types.MonitorType"
                },
                "verify_ssl": {
                    "type": "boolean"
                }
            }
        },
        "types.GenerateAPIKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                }
            }
        },
        "types.GetAlertConfigResponse": {
            "type": "object",
            "properties": {
                "alert_config": {
                    "$ref": "#/definitions/types.AlertConfig"
                }
            }
        },
        "types.GetMonitorResponse": {
            "type": "object",
            "properties": {
                "monitor": {
                    "$ref": "#/definitions/types.Monitor"
                }
            }
        },
        "types.GetSettingsResponse": {
            "type": "object",
            "properties": {
                "limits": {
                    "$ref": "#/definitions/types.UserLimits"
                },
                "settings": {
                    "$ref": "#/definitions/types.UserSettings"
                },
                "usage": {
                    "$ref": "#/definitions/types.UserUsageStats"
                }
            }
        },
        "types.ListAlertConfigsResponse": {
            "type": "object",
            "properties": {
                "alert_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.AlertConfig"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.ListMonitorsResponse": {
            "type": "object",
            "properties": {
                "monitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Monitor"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Monitor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dns_record_type": {
                    "type": "string"
                },
                "expected_response": {
                    "type": "string"
                },
                "expected_status_codes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "follow_redirects": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.MonitorStatus"
                },
                "target": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/types.MonitorType"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "verify_ssl": {
                    "type": "boolean"
                }
            }
        },
        "types.MonitorStatus": {
            "type": "string",
            "enum": [
                "active",
                "paused",
                "error"
            ],
            "x-enum-varnames": [
                "MonitorStatusActive",
                "MonitorStatusPaused",
                "MonitorStatusError"
            ]
        },
        "types.MonitorType": {
            "type": "string",
            "enum": [
                "http",
                "tcp",
                "ping",
                "dns"
            ],
            "x-enum-varnames": [
                "MonitorTypeHTTP",
                "MonitorTypeTCP",
                "MonitorTypePing",
                "MonitorTypeDNS"
            ]
        },
        "types.TestWebhookRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "types.TestWebhookResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "types.ThemePreference": {
            "type": "string",
            "enum": [
                "light",
                "dark",
                "system"
            ],
            "x-enum-varnames": [
                "ThemeLight",
                "ThemeDark",
                "ThemeSystem"
            ]
        },
        "types.TimezonePreference": {
            "type": "string",
            "enum": [
                "UTC",
                "America/New_York",
                "America/Los_Angeles",
                "Europe/London",
                "Europe/Paris",
                "Asia/Tokyo",
                "Asia/Singapore",
                "Australia/Sydney"
            ],
            "x-enum-varnames": [
                "TimezoneUTC",
                "TimezoneNewYork",
                "TimezoneLosAngeles",
                "TimezoneLondon",
                "TimezoneParis",
                "TimezoneTokyo",
                "TimezoneSingapore",
                "TimezoneSydney"
            ]
        },
        "types.ToggleSettingResponse": {
            "type": "object",
            "properties": {
                "setting": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "types.UpdateAlertConfigRequest": {
            "type": "object",
            "properties": {
                "condition": {
                    "$ref": "#/definitions/types.AlertCondition"
                },
                "consecutive_count": {
                    "type": "integer",
                    "minimum": 1
                },
                "cooldown_minutes": {
                    "type": "integer",
                    "minimum": 1
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/types.AlertSeverity"
                },
                "threshold": {
                    "$ref": "#/definitions/types.AlertThreshold"
                }
            }
        },
        "types.UpdateMonitorRequest": {
            "type": "object",
            "properties": {
                "dns_record_type": {
                    "type": "string"
                },
                "expected_response": {
                    "type": "string"
                },
                "expected_status_codes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "follow_redirects": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer",
                    "minimum": 30
                },
                "locations": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.MonitorStatus"
                },
                "target": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "minimum": 5
                },
                "type": {
                    "$ref": "#/definitions/types.MonitorType"
                },
                "verify_ssl": {
                    "type": "boolean"
                }
            }
        },
        "types.UpdateSettingsRequest": {
            "type": "object",
            "properties": {
                "api_key_enabled": {
                    "type": "boolean"
                },
                "dashboard_refresh_interval": {
                    "type": "integer"
                },
                "date_format": {
                    "type": "string"
                },
                "default_dashboard_view": {
                    "type": "string"
                },
                "email_digest_enabled": {
                    "type": "boolean"
                },
                "email_digest_frequency": {
                    "type": "string"
                },
                "mobile_number": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                },
                "theme": {
                    "$ref": "#/definitions/types.ThemePreference"
                },
                "time_format": {
                    "type": "string"
                },
                "timezone": {
                    "$ref": "#/definitions/types.TimezonePreference"
                },
                "webhook_secret": {
                    "type": "string"
                }
            }
        },
        "types.UserLimits": {
            "type": "object",
            "properties": {
                "api_rate_limit_per_minute": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "max_alert_configs_per_monitor": {
                    "type": "integer"
                },
                "max_checks_per_day": {
                    "type": "integer"
                },
                "max_monitors": {
                    "type": "integer"
                },
                "max_notification_channels": {
                    "type": "integer"
                },
                "retention_days": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.UserSettings": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "api_key_created_at": {
                    "type": "string"
                },
                "api_key_enabled": {
                    "type": "boolean"
                },
                "api_key_last_used_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dashboard_refresh_interval": {
                    "type": "integer"
                },
                "date_format": {
                    "type": "string"
                },
                "default_dashboard_view": {
                    "type": "string"
                },
                "email_digest_enabled": {
                    "type": "boolean"
                },
                "email_digest_frequency": {
                    "type": "string"
                },
                "mobile_number": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                },
                "theme": {
                    "$ref": "#/definitions/types.ThemePreference"
                },
                "time_format": {
                    "type": "string"
                },
                "timezone": {
                    "$ref": "#/definitions/types.TimezonePreference"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "webhook_secret": {
                    "type": "string"
                }
            }
        },
        "types.UserUsageStats": {
            "type": "object",
            "properties": {
                "api_calls": {
                    "type": "integer"
                },
                "data_transfer_bytes": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "total_alerts_triggered": {
                    "type": "integer"
                },
                "total_checks": {
                    "type": "integer"
                },
                "total_notifications_sent": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "JWT token for authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}